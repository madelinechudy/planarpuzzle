{"ast":null,"code":"var _jsxFileName = \"/Users/madelinechudy/Documents/GitHub/planarpuzzle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { layout } from './layout.js';\nimport Model from './model/model.js';\nimport { redrawCanvas } from './boundary/boundary.js';\nimport { puzzleInformation } from './model/puzzle.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar actualPuzzle = JSON.parse(JSON.stringify(puzzleInformation)); //parses strings into JSON objects\n\nfunction App() {\n  _s();\n\n  //initial instantiation of Model\n  const [model, setModel] = React.useState(new Model(actualPuzzle));\n  const appRef = React.useRef(null); //need to be able to refer to App\n\n  const canvasRef = React.useRef(null); //need to be able to refer to Canvas\n  // Ensures initial rendering is performed, and that whenever model changes it is re-rendered\n\n  React.useEffect(() => {\n    //Happens once\n    redrawCanvas(model, canvasRef.current, appRef.current);\n  }, [model]); //second argument is critical, declares when to refresh\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: layout.Appmain,\n    ref: appRef,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      tabIndex: \"1\",\n      className: \"App-canvas\",\n      ref: canvasRef,\n      width: layout.canvas.width,\n      height: layout.canvas.height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: layout.text,\n      children: \"number moves: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: layout.buttons,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: layout.upbutton,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nL37dNg7cOzO79PDwKmicHB1w80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","layout","Model","redrawCanvas","puzzleInformation","actualPuzzle","JSON","parse","stringify","App","model","setModel","useState","appRef","useRef","canvasRef","useEffect","current","Appmain","canvas","width","height","text","buttons","upbutton"],"sources":["/Users/madelinechudy/Documents/GitHub/planarpuzzle/src/App.js"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { layout } from './layout.js'; \nimport Model from './model/model.js';\nimport { redrawCanvas } from './boundary/boundary.js';\nimport { puzzleInformation } from './model/puzzle.js';\n\nvar actualPuzzle = JSON.parse(JSON.stringify(puzzleInformation)); //parses strings into JSON objects\n\nfunction App() {\n  //initial instantiation of Model\n  const [model, setModel] = React.useState(new Model(actualPuzzle));\n  \n  const appRef = React.useRef(null);    //need to be able to refer to App\n  const canvasRef = React.useRef(null); //need to be able to refer to Canvas\n\n  // Ensures initial rendering is performed, and that whenever model changes it is re-rendered\n  React.useEffect(() => {\n\n    //Happens once\n    redrawCanvas(model, canvasRef.current, appRef.current);\n  }, [model]) //second argument is critical, declares when to refresh\n\n\n\n  \n  return (\n    <main style={layout.Appmain} ref={appRef}>\n      <canvas tabIndex=\"1\"\n        className=\"App-canvas\"\n        ref={canvasRef}\n        width={layout.canvas.width}\n        height={layout.canvas.height}\n        />\n        <label style={layout.text}>number moves: </label>\n        <div style={layout.buttons}>\n        <button style={layout.upbutton}>^</button>\n        </div>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,iBAAf,CAAX,CAAnB,C,CAAkE;;AAElE,SAASK,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAe,IAAIV,KAAJ,CAAUG,YAAV,CAAf,CAA1B;EAEA,MAAMQ,MAAM,GAAGd,KAAK,CAACe,MAAN,CAAa,IAAb,CAAf,CAJa,CAIyB;;EACtC,MAAMC,SAAS,GAAGhB,KAAK,CAACe,MAAN,CAAa,IAAb,CAAlB,CALa,CAKyB;EAEtC;;EACAf,KAAK,CAACiB,SAAN,CAAgB,MAAM;IAEpB;IACAb,YAAY,CAACO,KAAD,EAAQK,SAAS,CAACE,OAAlB,EAA2BJ,MAAM,CAACI,OAAlC,CAAZ;EACD,CAJD,EAIG,CAACP,KAAD,CAJH,EARa,CAYD;;EAKZ,oBACE;IAAM,KAAK,EAAET,MAAM,CAACiB,OAApB;IAA6B,GAAG,EAAEL,MAAlC;IAAA,wBACE;MAAQ,QAAQ,EAAC,GAAjB;MACE,SAAS,EAAC,YADZ;MAEE,GAAG,EAAEE,SAFP;MAGE,KAAK,EAAEd,MAAM,CAACkB,MAAP,CAAcC,KAHvB;MAIE,MAAM,EAAEnB,MAAM,CAACkB,MAAP,CAAcE;IAJxB;MAAA;MAAA;MAAA;IAAA,QADF,eAOI;MAAO,KAAK,EAAEpB,MAAM,CAACqB,IAArB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAK,KAAK,EAAErB,MAAM,CAACsB,OAAnB;MAAA,uBACA;QAAQ,KAAK,EAAEtB,MAAM,CAACuB,QAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA/BQf,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}