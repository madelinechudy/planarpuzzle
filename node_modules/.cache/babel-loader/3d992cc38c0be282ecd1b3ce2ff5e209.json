{"ast":null,"code":"export class Square {\n  constructor(row, column, color, moveNum, base, unusable) {\n    this.row = row;\n    this.column = column;\n    this.color = color;\n    this.moveNum = moveNum;\n    this.base = base;\n    this.unusable = unusable;\n  }\n\n}\nexport class Board {\n  constructor(numRows, numColumns) {\n    this.numRows = numRows;\n    this.numColumns = numColumns;\n    this.selected = null;\n    this.squares = [];\n  }\n\n}\nexport default class Model {\n  constructor(info) {\n    this.initialize(info);\n  }\n\n  initialize(info) {\n    let numRows = parseInt(info.numRows);\n    let numColumns = parseInt(info.numColumns);\n    let squareinfo = parseInt(info.board.squares); //this is wrong\n    //figure out how to parse square info\n\n    this.board = new Board(numRows, numColumns);\n    this.victory = false;\n  }\n\n}\nexport class moveDirection {\n  constructor(deltar, deltac) {\n    this.deltar = deltar;\n    this.deltac = deltac;\n  }\n\n}\nexport const Down = new moveDirection(1, 0, 'down');\nexport const Up = new moveDirection(-1, 0, 'up');\nexport const Left = new moveDirection(0, -1, 'left');\nexport const Right = new moveDirection(0, 1, 'right');","map":{"version":3,"names":["Square","constructor","row","column","color","moveNum","base","unusable","Board","numRows","numColumns","selected","squares","Model","info","initialize","parseInt","squareinfo","board","victory","moveDirection","deltar","deltac","Down","Up","Left","Right"],"sources":["/Users/madelinechudy/Documents/GitHub/planarpuzzle/src/model/model.js"],"sourcesContent":["export class Square { \n    constructor(row, column, color, moveNum, base, unusable) { \n        this.row = row;\n        this.column = column;\n        this.color = color;\n        this.moveNum = moveNum;\n        this.base = base;\n        this.unusable = unusable;\n    }\n}\n\nexport class Board { \n    constructor(numRows, numColumns) { \n        this.numRows = numRows;\n        this.numColumns = numColumns;\n        this.selected = null;\n        this.squares = [];\n    }\n}\n\nexport default class Model { \n    constructor(info) { \n        this.initialize(info);\n    }\n\n    initialize(info) { \n        let numRows = parseInt(info.numRows);\n        let numColumns = parseInt(info.numColumns);\n        let squareinfo = parseInt(info.board.squares); //this is wrong\n        \n        //figure out how to parse square info\n        this.board = new Board(numRows, numColumns);\n        this.victory = false;\n    }\n}\n\nexport class moveDirection { \n    constructor(deltar, deltac) { \n        this.deltar = deltar;\n        this.deltac = deltac;\n    }\n}\n\nexport const Down = new moveDirection(1, 0, 'down');\nexport const Up = new moveDirection(-1, 0, 'up');\nexport const Left = new moveDirection(0, -1, 'left');\nexport const Right = new moveDirection(0, 1, 'right');"],"mappings":"AAAA,OAAO,MAAMA,MAAN,CAAa;EAChBC,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8C;IACrD,KAAKL,GAAL,GAAWA,GAAX;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,QAAL,GAAgBA,QAAhB;EACH;;AARe;AAWpB,OAAO,MAAMC,KAAN,CAAY;EACfP,WAAW,CAACQ,OAAD,EAAUC,UAAV,EAAsB;IAC7B,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,OAAL,GAAe,EAAf;EACH;;AANc;AASnB,eAAe,MAAMC,KAAN,CAAY;EACvBZ,WAAW,CAACa,IAAD,EAAO;IACd,KAAKC,UAAL,CAAgBD,IAAhB;EACH;;EAEDC,UAAU,CAACD,IAAD,EAAO;IACb,IAAIL,OAAO,GAAGO,QAAQ,CAACF,IAAI,CAACL,OAAN,CAAtB;IACA,IAAIC,UAAU,GAAGM,QAAQ,CAACF,IAAI,CAACJ,UAAN,CAAzB;IACA,IAAIO,UAAU,GAAGD,QAAQ,CAACF,IAAI,CAACI,KAAL,CAAWN,OAAZ,CAAzB,CAHa,CAGkC;IAE/C;;IACA,KAAKM,KAAL,GAAa,IAAIV,KAAJ,CAAUC,OAAV,EAAmBC,UAAnB,CAAb;IACA,KAAKS,OAAL,GAAe,KAAf;EACH;;AAbsB;AAgB3B,OAAO,MAAMC,aAAN,CAAoB;EACvBnB,WAAW,CAACoB,MAAD,EAASC,MAAT,EAAiB;IACxB,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;AAJsB;AAO3B,OAAO,MAAMC,IAAI,GAAG,IAAIH,aAAJ,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,MAAxB,CAAb;AACP,OAAO,MAAMI,EAAE,GAAG,IAAIJ,aAAJ,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,IAAzB,CAAX;AACP,OAAO,MAAMK,IAAI,GAAG,IAAIL,aAAJ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,MAAzB,CAAb;AACP,OAAO,MAAMM,KAAK,GAAG,IAAIN,aAAJ,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,OAAxB,CAAd"},"metadata":{},"sourceType":"module"}